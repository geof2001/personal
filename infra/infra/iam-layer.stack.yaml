Parameters: {}

Mappings:
  AccountMap:
    "638782101961":
      datadogexternalId: a5763dadebff483d8a0e112a697ce26f
    "181133766305":
      datadogexternalId: cd18fae2ea614660b5814b0cc16f962d
    "886239521314":
      datadogexternalId: 2ad67ce52af84ec391db925e92ce6494

Conditions:

  deployNonProdOnly: !Or
    - !Equals [!Ref "AWS::AccountId", '638782101961']
    - !Equals [!Ref "AWS::AccountId", '181133766305']

Resources:
  DeduperRDSAccessS3:
    Type: "AWS::IAM::Role"
    Properties:
      AssumeRolePolicyDocument:
        Statement:
        - Action:
          - sts:AssumeRole
          Effect: Allow
          Principal:
            Service:
            - rds.amazonaws.com
          Sid: RDSAccessToS3
        Version: '2012-10-17'
      Path: /
      Policies:
      - PolicyDocument:
          Statement:
          - Action:
            - s3:Get*
            - s3:List*
            - s3:Put*
            - s3:DeleteObject
            # - s3:CreateBucket
            Effect: Allow
            Resource: '*'
          Version: '2012-10-17'
        PolicyName: deduper-rds-access-s3
      RoleName: deduper-rds-access-s3

  DatadogRole:
    Type: "AWS::IAM::Role"
    Properties:
      AssumeRolePolicyDocument:
        Statement:
        - Action:
          - sts:AssumeRole
          Effect: Allow
          Principal:
            AWS:
            - arn:aws:iam::464622532012:root
          Condition:
            StringEquals:
              "sts:ExternalId":
                - !FindInMap [AccountMap, !Ref "AWS::AccountId", datadogexternalId]
          Sid: DatadogRORole
        Version: '2012-10-17'
      Policies:
      - PolicyDocument:
          Statement:
          - Action:
            - kinesis:Describe*
            - autoscaling:Describe*
            - tag:GetResources
            - rds:List*
            - logs:Describe*
            - cloudtrail:GetTrailStatus
            - dynamodb:list*
            - cloudwatch:Describe*
            - elasticmapreduce:Describe*
            - elasticmapreduce:List*
            - rds:Describe*
            - sns:Publish
            - elasticache:List*
            - route53:List*
            - elasticloadbalancing:Describe*
            - cloudwatch:Get*
            - logs:FilterLogEvents
            - ecs:List*
            - ec2:Get*
            - ses:Get*
            - kinesis:List*
            - ecs:Describe*
            - cloudwatch:List*
            - logs:TestMetricFilter
            - logs:Get*
            - elasticache:Describe*
            - cloudtrail:DescribeTrails
            - support:*
            - sns:List*
            - ec2:Describe*
            - dynamodb:describe*
            - lambda:List*
            Effect: Allow
            Resource: '*'
          Version: '2012-10-17'
        PolicyName: DatadogAWSIntegrationPolicy
      RoleName: datadog

  FirehoseRole:
    Type: "AWS::IAM::Role"
    Properties:
      AssumeRolePolicyDocument:
        Statement:
        - Action:
          - sts:AssumeRole
          Effect: Allow
          Principal:
            Service:
            - firehose.amazonaws.com
        Version: '2012-10-17'
      Path: /
      Policies:
      - PolicyDocument:
          Statement:
          - Action:
            - s3:AbortMultipartUpload
            - s3:GetBucketLocation
            - s3:GetObject
            - s3:ListBucket
            - s3:ListBucketMultipartUploads
            - s3:PutObject
            Effect: Allow
            Resource: "*"
          Version: '2012-10-17'
        PolicyName: firehose-s3-policy
  
  SlackBudRole:
    Type: "AWS::IAM::Role"
    Properties:
      AssumeRolePolicyDocument:
        Statement:
        - Action:
          - sts:AssumeRole
          Effect: Allow
          Principal:
            AWS: arn:aws:iam::661796028321:root
        Version: '2012-10-17'
      Path: /
      RoleName: SlackBudRole
      Policies:
      - PolicyDocument:
          Statement:
          - Action:
            - logs:CreateLogGroup
            - logs:CreateLogStream
            - logs:PutLogEvents
            Effect: Allow
            Resource: arn:aws:logs:*:*:*
          - Action:
            - autoscaling:Describe*
            - cloudformation:DescribeStacks
            - cloudformation:List*
            - cloudfront:List*
            - ec2:Describe*
            - ecr:DescribeRepositories
            - ecr:ListImages
            - ecr:DescribeImages
            - elasticloadbalancing:AddTags
            - elasticloadbalancing:Describe*
            - elasticache:Describe*
            - dynamodb:CreateBackup
            - dynamodb:DeleteBackup
            - dynamodb:DeleteItem
            - dynamodb:Describe*
            - dynamodb:GetItem
            - dynamodb:List*
            - dynamodb:PutItem
            - dynamodb:Query
            - dynamodb:Scan
            - dynamodb:TagResource
            - dynamodb:UpdateItem
            - firehose:Describe*
            - firehose:List*
            - kinesis:AddTagsToStream
            - kinesis:List*
            - lambda:TagResource
            - logs:TagLogGroup
            - logs:UntagLogGroup
            - logs:List*
            - logs:Describe*
            - rds:Describe*
            - route53:Change*
            - route53:Create*
            - route53:DeleteTraffic*
            - route53:DeleteHealthCheck
            - route53:Get*
            - route53:List*
            - route53:Test*
            - route53:Update*
            - s3:List*
            - sqs:Tag*
            - sqs:List*
            - sqs:Untag*
            - ssm:Get*
            - ssm:Create*
            - ssm:List*
            - ssm:SendCommand
            - tag:*
            Effect: Allow
            Resource: '*'
          - Action:
            - s3:PutObject
            - s3:GetObject
            - s3:GetBucketLocation
            - s3:ListBucket
            Effect: Allow
            Resource:
              - arn:aws:s3:::sr-infra-slackbud-pipeline-artifacts
              - arn:aws:s3:::sr-infra-slackbud-pipeline-artifacts/*
              - arn:aws:s3:::sr-infra-slackbud-images-us-east-1
              - arn:aws:s3:::sr-infra-slackbud-images-us-east-1/*
              - arn:aws:s3:::sr-infra-slackbud-images-us-west-2
              - arn:aws:s3:::sr-infra-slackbud-images-us-west-2/*
            Sid: SsmOutputToInfraAccountBucket
          Version: '2012-10-17'
        PolicyName: SlackBudPolicy

  SlackBudDevRole:
    Type: "AWS::IAM::Role"
    Condition: deployNonProdOnly
    Properties:
      AssumeRolePolicyDocument:
        Statement:
        - Action:
          - sts:AssumeRole
          Effect: Allow
          Principal:
            AWS: arn:aws:iam::661796028321:root
        Version: '2012-10-17'
      Path: /
      RoleName: SlackBudDevRole
      Policies:
      - PolicyDocument:
          Statement:
          - Action:
            - logs:CreateLogGroup
            - logs:CreateLogStream
            - logs:PutLogEvents
            Effect: Allow
            Resource: arn:aws:logs:*:*:*
          - Action:
            - ecr:DescribeRepositories
            - ecr:ListImages
            - ecr:DescribeImages
            - dynamodb:DeleteItem
            - dynamodb:GetItem
            - dynamodb:PutItem
            - dynamodb:Scan
            - dynamodb:UpdateItem
            - dynamodb:List*
            - dynamodb:DescribeBackup
            - dynamodb:DeleteBackup
            - dynamodb:DescribeContinuousBackups
            - dynamodb:ListBackups
            - dynamodb:CreateBackup
            - cloudformation:DescribeStacks
            - route53:Change*
            - route53:Create*
            - route53:DeleteTraffic*
            - route53:DeleteHealthCheck
            - route53:Get*
            - route53:List*
            - route53:Test*
            - route53:Update*
            Effect: Allow
            Resource: '*'
          Version: '2012-10-17'
        PolicyName: SlackBudDevPolicy

Outputs:
  DeduperRDSAccessS3RoleARN:
    Description: ARN for aurora to load/unload from s3
    Value: !GetAtt DeduperRDSAccessS3.Arn
    Export:
      Name: !Sub ${AWS::StackName}-DeduperRDSAccessS3RoleARN

  FirehoseRoleArn:
    Description: ARN for the firehose to s3 policy
    Value: !GetAtt FirehoseRole.Arn
    Export:
      Name: !Sub ${AWS::StackName}-FirehoseRoleArn